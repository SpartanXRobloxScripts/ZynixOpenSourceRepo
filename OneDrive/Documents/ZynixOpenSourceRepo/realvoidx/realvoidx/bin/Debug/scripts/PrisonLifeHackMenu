--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 8 | Scripts: 1 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.CorgiSideExploitGUIV1
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["Name"] = [[CorgiSideExploitGUIV1]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.CorgiSideExploitGUIV1.MainFrame
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["Active"] = true;
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(81, 81, 81);
G2L["2"]["Selectable"] = true;
G2L["2"]["Size"] = UDim2.new(0, 588, 0, 431);
G2L["2"]["Position"] = UDim2.new(0.23704, 0, 0.21478, 0);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Name"] = [[MainFrame]];


-- StarterGui.CorgiSideExploitGUIV1.MainFrame.Title
G2L["3"] = Instance.new("TextLabel", G2L["2"]);
G2L["3"]["TextWrapped"] = true;
G2L["3"]["TextStrokeTransparency"] = 0;
G2L["3"]["BorderSizePixel"] = 0;
G2L["3"]["TextSize"] = 14;
G2L["3"]["TextScaled"] = true;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(126, 126, 126);
G2L["3"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3"]["Size"] = UDim2.new(0, 588, 0, 46);
G2L["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Text"] = [[Hack GUI Mod]];
G2L["3"]["Name"] = [[Title]];


-- StarterGui.CorgiSideExploitGUIV1.MainFrame.Close
G2L["4"] = Instance.new("TextButton", G2L["2"]);
G2L["4"]["TextWrapped"] = true;
G2L["4"]["TextStrokeTransparency"] = 0;
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4"]["TextSize"] = 14;
G2L["4"]["TextScaled"] = true;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(255, 56, 59);
G2L["4"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4"]["Size"] = UDim2.new(0, 46, 0, 46);
G2L["4"]["Name"] = [[Close]];
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4"]["Text"] = [[X]];
G2L["4"]["Position"] = UDim2.new(0.92177, 0, 0, 0);


-- StarterGui.CorgiSideExploitGUIV1.MainFrame.ButtonsFrame
G2L["5"] = Instance.new("Frame", G2L["2"]);
G2L["5"]["BorderSizePixel"] = 0;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5"]["Size"] = UDim2.new(0, 575, 0, 374);
G2L["5"]["Position"] = UDim2.new(0.02211, 0, 0.12993, 0);
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Name"] = [[ButtonsFrame]];
G2L["5"]["BackgroundTransparency"] = 1;


-- StarterGui.CorgiSideExploitGUIV1.MainFrame.ButtonsFrame.ReferenceButton
G2L["6"] = Instance.new("TextButton", G2L["5"]);
G2L["6"]["TextWrapped"] = true;
G2L["6"]["TextStrokeTransparency"] = 0;
G2L["6"]["BorderSizePixel"] = 0;
G2L["6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["TextSize"] = 14;
G2L["6"]["TextScaled"] = true;
G2L["6"]["BackgroundColor3"] = Color3.fromRGB(131, 131, 131);
G2L["6"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6"]["Size"] = UDim2.new(0, 129, 0, 37);
G2L["6"]["Name"] = [[ReferenceButton]];
G2L["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6"]["Position"] = UDim2.new(0.02891, 0, 0.03838, 0);


-- StarterGui.CorgiSideExploitGUIV1.MainFrame.ButtonsFrame.UIListLayout
G2L["7"] = Instance.new("UIListLayout", G2L["5"]);
G2L["7"]["Wraps"] = true;
G2L["7"]["Padding"] = UDim.new(0, 15);
G2L["7"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
G2L["7"]["FillDirection"] = Enum.FillDirection.Horizontal;


-- StarterGui.CorgiSideExploitGUIV1.ClientScript
G2L["8"] = Instance.new("LocalScript", G2L["1"]);
G2L["8"]["Name"] = [[ClientScript]];


-- StarterGui.CorgiSideExploitGUIV1.ClientScript
local function C_8()
local script = G2L["8"];
    local Players = game:GetService("Players")
    LocalPlayer = Players.LocalPlayer
    PlUI = LocalPlayer.PlayerGui
    local StarterGUI = game:GetService("StarterGui")
    local RunService = game:GetService("RunService")
    
    local RStep = RunService.RenderStepped
    local HBeat = RunService.Heartbeat
    
    local UI = script.Parent
    MainFrame = UI.MainFrame
    Close = MainFrame.Close
    MainScroll = MainFrame.ButtonsFrame
    RButton = MainScroll.ReferenceButton
    
    local Toggles = {
        Noclip = false;
    }
    
    local Notif = function(title, text, duration)
        StarterGUI:SetCore("SendNotification", {
            Title = title;
            Text = text;
            Duration = duration;
        })
    end
    
    local CloseOpen = function(frame : Frame, visibility : boolean)
        if frame then
            frame.Visible = visibility
        end
    end
    
    
    local Rstorage = game:GetService("ReplicatedStorage")
    local Rservice = game:GetService("RunService")
    local Hbeat = Rservice.Heartbeat
    local Rstep = Rservice.RenderStepped
    local Stepped = Rservice.Stepped
    local Teams = game:GetService("Teams")
    local Players = game:GetService("Players")
    local Camera = game:GetService("Workspace").Camera
    
    local LocalPlayer = game.Players.LocalPlayer
    
    local Teams = game:GetService("Teams")
    
    local Threads, Tasks = nil, nil
    
    local Unloaded = false
    local RegModule = nil
    
    local SavedArgs = {};
    
    local Saved = {
        WalkSpeed = nil;
        RunSpeed = 25;
        NormalSpeed = 16;
        JumpPower = nil;
        NormalJump = 50;
        SpinToolRadius = 8;
        SpinToolSpeed = 10;
        KillDebounce = {};
        MKillDebounce = {};
        Cars = {};
        PCEvents = {};
        Thread = {};
    };
    
    local Settings = {
        KillauraThreshold = 17;
        JoinNotify = false;
        PrintDebug = string.sub(LocalPlayer.Name, 1, 5) == "TheDestroyer" or string.sub(LocalPlayer.Name, 1, 9) == "devang099";
        User = {
            RankedCmds = true;
            HiddenMelee = false;
            HiddenArrest = false;
            AutoDumpCar = false;
            OldItemMethod = false;
        }
    };
    
    local LocPL = {
        Gamepass = nil;
        UIN = LocalPlayer.Name;
        UID = LocalPlayer.UserId;
        ShittyExecutor = nil;
        isTouch = game:GetService("UserInputService").TouchEnabled;
        isMouse = game:GetService("UserInputService").MouseEnabled;
    };
    
    local Loops = {
        KillTeams = {
            All = false;
            Guards = false;
            Inmates = false;
            Criminals = false;
            Neutrals = false;
            Hostiles = false;
        };
        MeleeTeams = {
            All = false;
            Guards = false;
            Inmates = false;
            Criminals = false;
            Neutrals = false;
        };
        ArrestTeams = {
            Inmate = false;
            Guard = false;
            Criminal = false;
        };
        AutoArresting = {
            Plr = {};
            All = false;
        };
        TaseTeams = {
            All = false;
            Inmates = false;
            Criminals = false;
        };
        Kill = {};
        MeleeKill = {};
        RandomKill = {};
        ShootKill = {};
        PunchKill = {};
        VoidKill = {};
        Voided = {};
        Trapped = {};
        Tase = {};
        Arrest = {};
        MakeCrim = {};
        Fling = {};
        CarFling = {};
        Speed = false;
        JumpPower = 50;
        Jump = false;
    };
    local Powers = {
        Killauras = {};
        Taseauras = {};
        Antitouch = {};
        Antipunch = {};
        Antishoot = {};
        Antiarrest = {};
        Onepunch = {};
        Punchaura = {};
        Oneshot = {};
        FriendlyFire = {};
        DeathNuke = {};
    };
    
    local Toggles = {
        ok = false;
        AutoRespawn = true;
        AutoFire = false;
        AutoFireRate = false;
        AutoGuns = false;
        AutoItems = false;
        AutoInfiniteAmmo = false;
        AutoGunMods = false;
        AntiBring = false;
        AntiTase = false;
        AntiArrest = false;
        AntiPunch = false;
        AntiStun = false;
        Antishoot = false;
        AntiShield = false;
        ArrestBack = false;
        PunchAura = false;
        SpamPunch = false;
        Onepunch = false;
        Oneshot = false;
        Headshot = false;
        Silentaim = false;
        Noclip = false;
        FriendlyFire = false;
        MeleeAura = false;
        ArrestAura = false;
        MeleeTouch = false;
        TKA = {
            Guard = false;
            Inmate = false;
            Criminal = false;
            Enemies = false;
        };
        ESP = false;
        Virus = false;
    };
    
    local Teleports = {
        nspawn = CFrame.new(879, 28, 2349);
        cells = CFrame.new(918.9735107421875, 99.98998260498047, 2451.423583984375);
        nexus = CFrame.new(877.929688, 99.9899826, 2373.57031, 0.989495575, 1.64841456e-08, 0.144563332, -3.13438235e-08, 1, 1.00512544e-07, -0.144563332, -1.0398788e-07, 0.989495575);
        armory = CFrame.new(836.130432, 99.9899826, 2284.55908, 0.999849498, 5.64007507e-08, -0.0173475463, -5.636889e-08, 1, 2.3254485e-09, 0.0173475463, -1.34723666e-09, 0.999849498);
        yard = CFrame.new(787.560425, 97.9999237, 2468.32056, -0.999741256, -7.32754017e-08, -0.0227459427, -7.49895506e-08, 1, 7.45077955e-08, 0.0227459427, 7.6194226e-08, -0.999741256);
        crimbase = CFrame.new(-864.760071, 94.4760284, 2085.87671, 0.999284029, 1.78674284e-08, 0.0378339142, -1.85715123e-08, 1, 1.82584365e-08, -0.0378339142, -1.89479969e-08, 0.999284029);
        cafe = CFrame.new(884.492798, 99.9899368, 2293.54907, -0.0628612712, -2.14097344e-08, -0.998022258, -9.52544568e-08, 1, -1.54524784e-08, 0.998022258, 9.40947018e-08, -0.0628612712);
        kitchen = CFrame.new(936.633118, 99.9899368, 2224.77148, -0.00265917974, -9.30829671e-08, 0.999996483, -3.28682326e-08, 1, 9.29958901e-08, -0.999996483, -3.26208252e-08, -0.00265917974);
        roof = CFrame.new(918.694092, 139.709427, 2266.60986, -0.998788536, -7.55880691e-08, -0.0492084064, -7.8453354e-08, 1, 5.62961198e-08, 0.0492084064, 6.00884817e-08, -0.998788536);
        vents = CFrame.new(933.55376574342, 121.534234671875, 2232.7952174975);
        office = CFrame.new(706.1928465, 103.14982749, 2344.3957382525);
        ytower = CFrame.new(786.731873, 125.039917, 2587.79834, -0.0578307845, 8.82393678e-08, 0.998326421, 6.09781523e-08, 1, -8.48549675e-08, -0.998326421, 5.59688687e-08, -0.0578307845);
        gtower = CFrame.new(505.551605, 125.039917, 2127.41138, -0.99910152, 5.44945458e-08, 0.0423811078, 5.36830491e-08, 1, -2.02856469e-08, -0.0423811078, -1.79922726e-08, -0.99910152);
        garage = CFrame.new(618.705566, 98.039917, 2469.14136, 0.997341573, 1.85835844e-08, -0.0728682056, -1.79448154e-08, 1, 9.42077172e-09, 0.0728682056, -8.0881204e-09, 0.997341573);
        sewers = CFrame.new(917.123657, 78.6990509, 2297.05298, -0.999281704, -9.98203404e-08, -0.0378962979, -1.01324503e-07, 1, 3.77708638e-08, 0.0378962979, 4.15835579e-08, -0.999281704);
        neighborhood = CFrame.new(-281.254669, 54.1751289, 2484.75513, 0.0408788249, 3.26279768e-08, 0.999164104, -3.88249717e-08, 1, -3.10668256e-08, -0.999164104, -3.75225433e-08, 0.0408788249);
        gas = CFrame.new(-497.284821, 54.3937759, 1686.3175, 0.585129559, -4.33374865e-08, -0.810939848, 5.33533938e-13, 1, -5.34406759e-08, 0.810939848, 3.12692876e-08, 0.585129559);
        deadend = CFrame.new(-979.852478, 54.1750259, 1382.78967, 0.0152699631, 8.88235174e-09, 0.999883413, 6.75286884e-08, 1, -9.9146682e-09, -0.999883413, 6.76722109e-08, 0.0152699631);
        store = CFrame.new(455.089508, 11.4253607, 1222.89746, 0.99995482, -3.92535604e-09, 0.00950394664, 2.84450263e-09, 1, 1.1374032e-07, -0.00950394664, -1.13708147e-07, 0.99995482);
        roadend = CFrame.new(1060.81995, 67.5668106, 1847.08923, 0.0752086118, -1.01192255e-08, -0.997167826, 4.30985886e-10, 1, -1.01154605e-08, 0.997167826, 3.31004502e-10, 0.0752086118);
        trapbuilding = CFrame.new(-306.715485, 84.2401199, 1984.13367, -0.802221119, 5.70582088e-08, -0.597027004, 4.81801123e-08, 1, 3.08312771e-08, 0.597027004, -4.0313255e-09, -0.802221119);
        mansion = CFrame.new(-315.790436, 64.5724411, 1840.83521, 0.80697298, -4.47871713e-08, 0.590588331, 1.14004006e-08, 1, 6.02574701e-08, -0.590588331, -4.18932053e-08, 0.80697298);
        trapbase = CFrame.new(-943.973145, 94.1287613, 1919.73694, 0.025614135, -1.48015129e-08, 0.999671876, 1.00375175e-07, 1, 1.22345032e-08, -0.999671876, 1.00028863e-07, 0.025614135);
        buildingroof = CFrame.new(-317.689331, 118.838821, 2009.28186, 0.749499857, 2.48145682e-09, 0.662004471, 3.51757373e-10, 1, -4.14664703e-09, -0.662004471, 3.34077632e-09, 0.749499857);
    };
    
    local States = {
        SoundSpam = false,
        LoopSounds = false
    };
    
    local SavedPositions = {};
    
    local Connections = {};
    
    local Whitelisted = {};
    local RankedPlrs = {};
    
    local deprint = function(args)
        if Settings.PrintDebug then
            print(args)
        end
    end
    
    local dewarn = function(args)
        if Settings.PrintDebug then
            warn(args)
        end
    end
    
    local VKeyPress = function(args, args2, waits)
        if args2 == "Press" then
            game:GetService("VirtualInputManager"):SendKeyEvent(true, args, false, game)
            task.wait(.1)
            game:GetService("VirtualInputManager"):SendKeyEvent(false, args, false, game)
        elseif args2 == "Hold" then
            game:GetService("VirtualInputManager"):SendKeyEvent(true, args, false, game)
        elseif args2 == "UnHold" then
            game:GetService("VirtualInputManager"):SendKeyEvent(false, args, false, game)
        elseif args2 == "HoldWait" and waits then
            game:GetService("VirtualInputManager"):SendKeyEvent(true, args, false, game)
            wait(waits)
            game:GetService("VirtualInputManager"):SendKeyEvent(false, args, false, game)
        end
    end
    
    local waitfor = function(source, args, interval)
        local int = interval or 5
        local timeout = tick() + int
        repeat Stepped:Wait() until source:FindFirstChild(args) or tick() - timeout >=0
        timeout = nil
        if source:FindFirstChild(args) then
            return source:FindFirstChild(args)
        else
            return nil
        end
    end
    
    local SaveCamPos = function()
        SavedPositions.OldCameraPos = Camera.CFrame
    end
    
    local LoadCamPos = function()
        Rstep:Wait()
        Camera.CFrame = SavedPositions.OldCameraPos or Camera.CFrame
    end
    
    local LocTP = function(cframe)
        LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = cframe
    end
    
    local LAction = function(args, args2)
        if args == "sit" then
            LocalPlayer.Character:FindFirstChild("Humanoid").Sit = true
        elseif args == "unsit" then
            if args2 then
                local human = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
                for i = 1, 8 do Hbeat:Wait();human.Sit=false;Rstep:Wait();human.Sit=false;Stepped:Wait();human.Sit=false end
            end;LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Running)
        elseif args == "speed" then
            LocalPlayer.Character:FindFirstChild("Humanoid").WalkSpeed = args2
        elseif args == "jumppw" then
            LocalPlayer.Character:FindFirstChild("Humanoid").JumpPower = args2
        elseif args == "die" then
            LocalPlayer.Character:FindFirstChild("Humanoid").Health = 0
        elseif args == "died" then
            LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid"):ChangeState(Enum.HumanoidStateType.Dead)
        elseif args == "jump" then
            LocalPlayer.Character:FindFirstChild("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
        elseif args == "state" then
            LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(args2)
        elseif args == "equip" then
            LocalPlayer.Character:FindFirstChild("Humanoid"):EquipTool(args2)
        elseif args == "unequip" then
            LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
        end
    end
    --Command functions
    local PlrFromArgs = function(plr, args)
        if plr and plr:lower() == "me" then
            return args
        elseif not plr and not args then
            return false
        elseif not plr and args then
            return args
        end
        local foundplr = false
        for i,v in pairs(Players:GetPlayers()) do
            local Name, DisplayName = v.Name:lower(), v.DisplayName:lower()
            if Name:sub(1, #plr) == plr:lower() or DisplayName:sub(1, #plr) == plr:lower() then
                foundplr = v
            end
        end
        return foundplr
    end
    
    local GetRandomPlr = function(args)
        local DaPlayers = Players:GetPlayers()
        local DaIndex = math.random(1, #DaPlayers)
        local ToReturn = DaPlayers[DaIndex]
        if args and ToReturn.UserId == args.UserId then
            DaPlayers = Players:GetPlayers(); DaIndex = math.random(1, #DaPlayers); ToReturn = DaPlayers[DaIndex]
        end
        return ToReturn
    end
    --i made it into a whole useless function just to save my hands
    local CheckWhitelist = function(args)
        return not (Whitelisted[args.UserId] or Settings.Ranked.AutoWhitelist and RankedPlrs[args.UserId])
    end
    
    local MeleEve = function(args)
        Rstorage.meleeEvent:FireServer(args)
    end
    
    local TeamEve = function(args)
        workspace.Remote.TeamEvent:FireServer(args)
    end
    
    local ArrestEve = function(args, repeated, interval)
        if repeated then
            for i = 1, repeated do
                if interval then task.wait(interval) end
                task.spawn(function()
                    if args.Character:FindFirstChild("Humanoid") and args.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 then
                        workspace.Remote.arrest:InvokeServer(args.Character:FindFirstChildWhichIsA("Part"))
                    end
                end)
            end
        else
            workspace.Remote.arrest:InvokeServer(args.Character:FindFirstChildWhichIsA("Part"))
        end
    end
    
    
    
    local RTPing = function(value)
        if value then
            task.wait(value)
        end
        local RT1 = tick()
        pcall(function()
            workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.buttons["Car Spawner"]["Car Spawner"])
        end)
        local RT2 = tick()
        local RoundTrip = (RT2-RT1) * 1000
        return RoundTrip
    end
    
    local CPing = function(ConvertToHuman, OneWayTrip)
        if ConvertToHuman then
            return OneWayTrip and LocalPlayer:GetNetworkPing() * 1000 or game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue()
        else
            return OneWayTrip and LocalPlayer:GetNetworkPing() or game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue() / 1000
        end
    end
    
    local TeamTo = function(args)
        local tempos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame; SavedPositions.AutoRe = tempos; SaveCamPos()
        if args == "criminal" then
            if LocalPlayer.TeamColor.Name == "Medium stone grey" then
                TeamEve("Bright orange")
            end
            workspace["Criminals Spawn"].SpawnLocation.CanCollide = false
            repeat
                pcall(function()
                    workspace["Criminals Spawn"].SpawnLocation.CFrame = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
                end)
                Stepped:Wait()
            until LocalPlayer.TeamColor == BrickColor.new("Really red")
            workspace['Criminals Spawn'].SpawnLocation.CFrame = SavedPositions.Crimpad
            return
        elseif args == "inmate" then
            TeamEve("Bright orange")
        elseif args == "guard" then
            TeamEve("Bright blue")
            if #Teams.Guards:GetPlayers() > 7 then
                return
            end
        end
        LocalPlayer.CharacterAdded:Wait(); waitfor(LocalPlayer.Character, "HumanoidRootPart", 5).CFrame = tempos; LoadCamPos()
    end
    
    local ItemGrab = function(source, args)
        local lroot = LocalPlayer.Character:FindFirstChild("HumanoidRootPart"); local timeout = tick() + 5
        if lroot then SavedPositions.GetGunOldPos = not SavedPositions.GetGunOldPos and lroot.CFrame or SavedPositions.GetGunOldPos; end
        local DaItem = source:FindFirstChild(args); local ItemPickup = DaItem.ITEMPICKUP; local IPickup = ItemPickup.Position
        if lroot then LocTP(CFrame.new(IPickup)); end; repeat task.wait()
            pcall(function()
                LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit = false; LocTP(CFrame.new(IPickup))
            end); task.spawn(function()
                game:GetService("Workspace").Remote.ItemHandler:InvokeServer(ItemPickup)
            end)
        until LocalPlayer.Backpack:FindFirstChild(args) or LocalPlayer.Character:FindFirstChild(args) or tick() - timeout >=0
        pcall(function() LocTP(SavedPositions.GetGunOldPos); end); SavedPositions.GetGunOldPos = nil
    end
    
    local ItemHand = function(source, args)
        if source and source == "old" then
            game:GetService("Workspace").Remote.ItemHandler:InvokeServer(args)
            return
        end; if Settings.User.OldItemMethod then
            if source then
                ItemGrab(source, args)
            else
                for _,sources in pairs(workspace.Prison_ITEMS:GetChildren()) do
                    if sources:FindFirstChild(args) then
                        ItemGrab(source, args)
                        break
                    end
                end
            end
            return
        end; if source then
            workspace.Remote.ItemHandler:InvokeServer({Position = LocalPlayer.Character.Head.Position, Parent = source:FindFirstChild(args)})
        else
            workspace.Remote.ItemHandler:InvokeServer({Position = LocalPlayer.Character.Head.Position, Parent = workspace.Prison_ITEMS.giver:FindFirstChild(args) or workspace.Prison_ITEMS.single:FindFirstChild(args)})
        end
    end
    
    
    
    local Gun = function(args) 
        if Settings.User.OldItemMethod then
            ItemHand(workspace["Prison_ITEMS"].giver, args)
            return
        end; workspace.Remote.ItemHandler:InvokeServer({Position = LocalPlayer.Character.Head.Position, Parent = workspace.Prison_ITEMS.giver:FindFirstChild(args) or workspace.Prison_ITEMS.single:FindFirstChild(args)})
    end
    
    local AllGuns = function()
        if Settings.User.OldItemMethod then
            Gun("AK-47")
            Gun("Remington 870")
        else
            task.spawn(Gun, "AK-47")
            task.spawn(Gun, "Remington 870")
        end
        Gun("M9")
        task.wait()
    end
    
    local CreateClientRay = function(RayS, CustomColor)
        for i = 1, #RayS do
            local NewRay = Instance.new("Part", workspace.CurrentCamera)
            NewRay.Name = "ClientRay"
            NewRay.Material = Enum.Material.Neon
            NewRay.Anchored = true
            NewRay.CanCollide = false
            NewRay.Transparency = 0.5
            NewRay.formFactor = Enum.FormFactor.Custom
            NewRay.Size = Vector3.new(0.2, 0.2, RayS[i].Distance)
            NewRay.CFrame = RayS[i].Cframe
            local Mesh = Instance.new("BlockMesh", NewRay)
            Mesh.Scale = Vector3.new(0.5, 0.5, 1)
            if CustomColor then
                NewRay.BrickColor = BrickColor.new(CustomColor)
            else
                NewRay.BrickColor = BrickColor.Yellow()
            end
            game:GetService("Debris"):AddItem(NewRay, 0.05)
        end
    end
    
    local MultiKill = function(plrs, exclude)
        local AK = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
        if not AK and not (LocalPlayer.TeamColor == BrickColor.new("Bright blue")) then
            Gun("AK-47")
            task.wait()
            AK = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
        elseif LocalPlayer.TeamColor == BrickColor.new("Bright blue") then
            AK = LocalPlayer.Backpack:FindFirstChild("M9") or LocalPlayer.Character:FindFirstChild("M9")
        end
        local neutralkill, hasplayers = nil, nil
        local ShootEvents = {}
        for i,v in pairs(plrs:GetPlayers()) do
            if not (v == LocalPlayer or v == exclude) then
                if v.Character and not v.Character:FindFirstChildWhichIsA("ForceField") and not (v.Character:FindFirstChild("Humanoid").Health == 0) then
                    hasplayers = true
                    if v.TeamColor == LocalPlayer.TeamColor then
                        if v.TeamColor == BrickColor.new("Bright orange") then
                            TeamTo("criminal")
                        elseif v.TeamColor == BrickColor.new("Really red") or v.TeamColor == BrickColor.new("Bright blue") then
                            neutralkill = true
                        end
                    end
                    for i = 1, 10 do
                        ShootEvents[#ShootEvents + 1] = {
                            Hit = v.Character:FindFirstChildOfClass("Part");
                            Cframe = CFrame.new();
                            RayObject = Ray.new(Vector3.new(), Vector3.new());
                            Distance = 0;
                        }
                    end
                end
            end
        end
        if not hasplayers then
            return
        end
        task.spawn(function()
            for i = 1, 20 do
                Rstorage.ReloadEvent:FireServer(AK)
                task.wait(.1)
            end
        end)
        if neutralkill then
            SavedPositions.AutoRe = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
            SaveCamPos()
            TeamEve("Medium stone grey")
            Rstorage.ShootEvent:FireServer(ShootEvents, AK)
            task.wait(0.06)
            TeamEve("Bright orange")
        else
            Rstorage.ShootEvent:FireServer(ShootEvents, AK)
        end
    end
    
    local ShootKill = function(plr, amount, guntouse, hitpart)
        if plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") and plr.Character.Humanoid.Health ~= 0 then
            if plr.TeamColor == LocalPlayer.TeamColor then
                if plr.TeamColor == BrickColor.new("Bright orange") then
                    TeamTo("criminal")
                else
                    TeamTo("inmate")
                    RTPing(0.1)
                end
            end
            local DeGun = guntouse or "AK-47"
            local HasGun = LocalPlayer.Character:FindFirstChild(DeGun) or LocalPlayer.Backpack:FindFirstChild(DeGun)
            if not HasGun then
                Gun(DeGun)
                HasGun = waitfor(LocalPlayer.Backpack, DeGun, 1)
            end
            local ToHit = hitpart or plr.Character:FindFirstChildWhichIsA("BasePart")
            local Times = amount or 15
            LAction("equip", HasGun)
            for i = 1, Times do
                if not HasGun then
                    break
                end
                local Start, End = HasGun:FindFirstChild("Muzzle").Position, plr.Character:FindFirstChild("HumanoidRootPart").Position
                local EA = {
                    [1] = {
                        Hit = ToHit;
                        Cframe = CFrame.new(End, Start) * CFrame.new(0, 0, -(Start-End).Magnitude / 2);
                        Distance = (Start-End).Magnitude;
                        RayObject = Ray.new(Vector3.new(), Vector3.new());
                    };
                };
                if DeGun == "Remington 870" then
                    for i = 1, 4 do
                        local tmp = End
                        End = End + Vector3.new(math.random(-1, 1), math.random(-1, 2), math.random(-1, 1))
                        EA[#EA+1] = {
                            Hit = ToHit;
                            Cframe = CFrame.new(End, Start) * CFrame.new(0, 0, -(Start-End).Magnitude / 2);
                            Distance = (Start-End).Magnitude;
                            RayObject = Ray.new(Vector3.new(), Vector3.new());
                        };
                        End = tmp
                        tmp = nil
                    end
                end
                CreateClientRay(EA)
                Rstorage.ShootEvent:FireServer(EA, HasGun)
                Rstorage.ReloadEvent:FireServer(HasGun)
                task.wait(.1)
                if plr.Character and plr.Character:FindFirstChildOfClass("Humanoid").Health == 0 then
                    break
                end
            end
        end
    end
    
    SoundSpam = function()
        task.spawn(function()
            while States.SoundSpam do task.wait()
                local sounds = {}
                for ii,vv in next, workspace:GetDescendants() do
                    if vv:IsA("Sound") then
                        sounds[#sounds+1] = vv
                    end
                end; task.wait()
                pcall(function()
                    for i,v in pairs(Players:GetPlayers()) do
                        if v.Character and v.Character:FindFirstChild("Head") then
                            local vhead = v.Character:FindFirstChild("Head")
                            for ii,vv in ipairs(sounds) do
                                Rstorage.SoundEvent:FireServer(vv, vhead); vv:Play()
                            end
                        end; wait(CPing()+0.15)
                    end; sounds = nil
                end)
                task.wait(.1); RTPing()
            end
        end)
    end;
    LoopSounds = function()
        task.spawn(function()
            while States.LoopSounds do task.wait()
                pcall(function()
                    for i,v in pairs(Players:GetPlayers()) do
                        if v and v.Character then
                            local head = v.Character.Head
                            local punch = head.punchSound; punch.Volume = math.huge
                            Rstorage.SoundEvent:FireServer(punch)
                            local ring = workspace["Prison_guardspawn"].spawn.Sound
                            Rstorage.SoundEvent:FireServer(ring, head)
                            ring:Play(); punch:Play()
                        end
                    end
                end); task.wait(.08)
            end
        end)
    end;
    
    SavedPositions.AutoRe = false
    local diedevent
    local lochar = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local function ondiedevent()
        coroutine.wrap(function()
            diedevent:Disconnect(); SaveCamPos()
            SavedPositions.AutoRe = lochar:WaitForChild("HumanoidRootPart", 1) and LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
        end)()
        if Toggles.AutoRespawn then
            local locteam = LocalPlayer.TeamColor
            if locteam == BrickColor.new("Really red") then
                if #Teams.Guards:GetPlayers() < 8 then
                    TeamEve("Bright blue")
                else
                    TeamEve("Bright orange")
                end
                workspace["Criminals Spawn"].SpawnLocation.CanCollide = false
                workspace["Criminals Spawn"].SpawnLocation.CFrame = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
                LocalPlayer.CharacterAdded:Wait()
                repeat task.wait()
                    pcall(function()
                        workspace["Criminals Spawn"].SpawnLocation.CFrame = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
                    end)
                until LocalPlayer.TeamColor == BrickColor.new("Really red"); workspace['Criminals Spawn'].SpawnLocation.CFrame = SavedPositions.Crimpad
            elseif locteam == BrickColor.new("Bright blue") then
                if #Teams.Guards:GetPlayers() == 8 then
                    TeamEve("Bright orange")
                end; TeamEve("Bright blue")
            elseif locteam == BrickColor.new("Bright orange") then
                TeamEve("Bright orange")
            else
                TeamEve("Medium stone grey")
            end
        end
    end
    
    local function charaddtask()
        diedevent:Disconnect()
        local LHuman = lochar:WaitForChild("Humanoid", 1)
        if LHuman then
            diedevent = LHuman.Died:Connect(ondiedevent)
            if Connections.Humanation then
                Connections.Humanation:Disconnect(); Connections.Humanation = nil
            end
            Connections.Humanation = LHuman.AnimationPlayed:Connect(function(des)
                if Toggles.AntiArrest and des.Animation.AnimationId == "rbxassetid://287112271" then
                    des:Stop(); des:Destroy()
                    task.delay(4.95, function()
                        local tempos, wascriminal = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame, LocalPlayer.TeamColor.Name == "Really red" or nil; SavedPositions.AutoRe = tempos; SaveCamPos()
                        LocalPlayer.CharacterAdded:Wait(); waitfor(LocalPlayer.Character, "HumanoidRootPart", 1).CFrame = tempos; LoadCamPos()
                        if wascriminal then
                            TeamTo("criminal")
                        end
                    end); task.delay(0, function()
                        LAction("speed", Saved.NormalSpeed); task.wait(0.03); LAction("jumppw", Saved.NormalJump)
                    end)
                end
                if Toggles.AntiTase and des.Animation.AnimationId == "rbxassetid://279227693" then
                    des:Stop(); des:Destroy()
                    Hbeat:Wait(); LAction("speed", Saved.NormalSpeed); task.wait(0.03); LAction("jumppw", Saved.NormalJump)
                end
            end)
            if Connections.CharacterChildAdded then
                Connections.CharacterChildAdded:Disconnect(); Connections.CharacterChildAdded = nil
            end
            Connections.CharacterChildAdded = lochar.ChildAdded:Connect(function(tool)
                if tool:FindFirstChild("GunStates") and not LocPL.ShittyExecutor then
                    if Toggles.AutoInfiniteAmmo then
                        local stat = require(tool.GunStates)
                        stat.MaxAmmo = math.huge;stat.CurrentAmmo = math.huge;stat.AmmoPerClip = math.huge;stat.StoredAmmo = math.huge
                        if not Saved.Thread.AutoInfiniteAmmo then
                            Saved.Thread.AutoInfiniteAmmo = true;Tasks.AutoInfiniteAmmo()
                        end
                    end;if Toggles.AutoFire or Toggles.AutoFireRate then
                        local sta = require(tool.GunStates)
                        if Toggles.AutoFire and not States.SpinnyTools then
                            sta.AutoFire = true
                        end
                        if Toggles.AutoFireRate then
                            sta.FireRate = 0.01
                        end
                    end;if Toggles.AutoGunMods then
                        local stat = require(tool.GunStates)
                        stat.Damage = 9e9
                        stat.FireRate = 0.01
                        stat.Range = math.huge
                        stat.MaxAmmo = math.huge
                        stat.StoredAmmo = math.huge
                        stat.AmmoPerClip = math.huge
                        stat.CurrentAmmo = math.huge
                        stat.AutoFire = true
                        stat.Bullets = 10
                        if not Toggles.AutoInfiniteAmmo and not States.SpinnyTools then
                            Tasks.ReloadGun(tool, true)
                        end
                    end;if States.SpinnyTools then
                        require(tool.GunStates).AutoFire = false
                    end
                end
            end)
        end
        if LocalPlayer.TeamColor == BrickColor.new("Medium stone grey") or not LocPL.WrongGame and LocalPlayer.PlayerGui.Home.intro.Visible then
            Threads.HideTeamGui()
        end
    end
    
    local function oncharadded()
        lochar = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        coroutine.wrap(charaddtask)()
        if SavedPositions.AutoRe and Toggles.AutoRespawn then
            local LRoot = lochar:WaitForChild("HumanoidRootPart", 1)
            if LRoot then
                LRoot.CFrame = SavedPositions.AutoRe; LoadCamPos(); LRoot.CFrame = SavedPositions.AutoRe
                task.spawn(function()
                    for i = 1, 3 do
                        task.wait(); LRoot.CFrame = SavedPositions.AutoRe
                    end
                end)
                if wait() and not lochar:FindFirstChildWhichIsA("ForceField") then
                    for i = 1, 4 do
                        LRoot.CFrame = SavedPositions.AutoRe; waitfor(LocalPlayer.Character, "HumanoidRootPart", 1).CFrame = SavedPositions.AutoRe
                    end; lochar:WaitForChild("HumanoidRootPart", 1).CFrame = SavedPositions.AutoRe
                    deprint("Debug_Char added with no forcefield?")
                end
            end
        end
        lochar:WaitForChild("Humanoid", 1):SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
        lochar:WaitForChild("Humanoid", 1):SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
    end
    
    diedevent = lochar:WaitForChild("Humanoid").Died:Connect(ondiedevent)
    Connections.CharacterAdded = LocalPlayer.CharacterAdded:Connect(oncharadded)
    
    local GiveKeyCard = function(player)
        if player == LocalPlayer then
            if workspace.Prison_ITEMS.single:FindFirstChild("Key card") then
                ItemHand(false, "Key card")
            else
                local oldteam, oldpos = LocalPlayer.TeamColor, LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
                repeat task.wait()
                    if LocalPlayer.TeamColor ~= BrickColor.new("Bright blue") then
                        if #Teams.Guards:GetPlayers() > 7 then
                            Notif("Guards Team Is Full", nil, 5)
                            break
                        end; TeamTo("guard")
                    end; LAction("died")
                    if not Toggles.AutoRespawn then
                        TeamTo("guard")
                    else
                        LocalPlayer.CharacterAdded:Wait()
                    end; wait(.1)
                until workspace.Prison_ITEMS.single:FindFirstChild("Key card"); LocTP(oldpos)
                if oldteam == BrickColor.new("Bright orange") then
                    TeamTo("inmate")
                elseif oldteam == BrickColor.new("Really red") then
                    TeamTo("criminal")
                end; ItemHand(false, "Key card"); ItemHand(false, "Key card"); ItemHand(false, "Key card")
            end
        else
            local finallykeycard = nil; local oldteam = LocalPlayer.TeamColor
            SavedPositions.GiveKeyCard = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
            task.spawn(function()
                while task.wait() do
                    for i,v in pairs(workspace.Prison_ITEMS.single:GetChildren()) do
                        if v.Name == "Key card" and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            local vpivot = v.ITEMPICKUP.Position
                            local ppivot = player.Character:FindFirstChild("HumanoidRootPart").Position
                            if (vpivot-ppivot).Magnitude <= 15 then
                                finallykeycard = true
                                break
                            end
                        end
                    end
                    if finallykeycard then
                        break
                    end
                end
            end)
            repeat task.wait()
                if player.Character and player.Character:FindFirstChildOfClass("Humanoid") and player.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 then
                    local temp = player.Character:FindFirstChild("HumanoidRootPart").CFrame
                    SavedPositions.AutoRe = temp; LocTP(temp)
                    if LocalPlayer.TeamColor ~= BrickColor.new("Bright blue") then
                        if #Teams.Guards:GetPlayers() > 7 then
                            finallykeycard = true
                            break
                        end
                        TeamEve("Bright blue"); LocalPlayer.CharacterAdded:Wait()
                        waitfor(LocalPlayer.Character, "HumanoidRootPart", 2).CFrame = temp; RTPing(0)
                    end
                    LAction("died")
                    if Toggles.AutoRespawn then
                        LocalPlayer.CharacterAdded:Wait(); waitfor(LocalPlayer.Character, "HumanoidRootPart", 2).CFrame = temp
                    else
                        TeamTo("guard")
                    end; RTPing(0.09)
                else
                    finallykeycard = true
                    break
                end
            until finallykeycard
            SavedPositions.AutoRe = SavedPositions.GiveKeyCard; LocTP(SavedPositions.GiveKeyCard)
            if oldteam == BrickColor.new("Bright orange") then
                TeamTo("inmate")
            elseif oldteam == BrickColor.new("Really red") then
                TeamTo("criminal")
            end
        end
    end
    
    local KillPL = function(plr, events, guntouse, WaitToDie) 
        local AK = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
        if not AK and not guntouse then
            Gun("AK-47")
            task.wait()
            AK = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
        elseif guntouse then
            AK = LocalPlayer.Backpack:FindFirstChild(guntouse) or LocalPlayer.Character:FindFirstChild(guntouse)
            if not AK then
                Gun(guntouse)
                task.wait()
                AK = LocalPlayer.Backpack:FindFirstChild(guntouse)
            end
        end
        if plr.Character:FindFirstChild("Humanoid").Health == 0 or plr.Character:FindFirstChildWhichIsA("ForceField") then
            return
        end
        local Eve = events or 10
        local ShootEvents = {};
        for i = 1, Eve do
            ShootEvents[#ShootEvents + 1] = {
                Hit = plr.Character:FindFirstChildOfClass("Part");
                Cframe = CFrame.new();
                RayObject = Ray.new(Vector3.new(), Vector3.new());
                Distance = 0;
            };
        end
        task.spawn(function()
            for i = 1, 6 do
                Rstorage.ReloadEvent:FireServer(AK)
                task.wait(.1)
            end
        end)
        if plr.TeamColor == LocalPlayer.TeamColor then
            if plr.TeamColor == BrickColor.new("Really red") or plr.TeamColor == BrickColor.new("Bright blue") then
                SavedPositions.AutoRe = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
                SaveCamPos()
                TeamEve("Bright orange")
                Rstorage.ShootEvent:FireServer(ShootEvents, AK)
                task.wait(0.06)
            else
                TeamTo("criminal")
                Rstorage.ShootEvent:FireServer(ShootEvents, AK)
            end
        else
            Rstorage.ShootEvent:FireServer(ShootEvents, AK)
        end
        if WaitToDie then
            repeat task.wait() until not plr.Character or not plr.Character:FindFirstChildOfClass("Humanoid") or plr.Character:FindFirstChildOfClass("Humanoid").Health == 0 or plr.Character:FindFirstChildWhichIsA("ForceField")
        end
    end
    
    local GetIllegalReg = function(args)
        local RegPlr = nil
        if args.Character and RegModule then
            for i,v in pairs(Rstorage:FindFirstChild("PermittedRegions"):GetChildren()) do
                if RegModule.findRegion(args.Character) then
                    RegPlr = RegModule.findRegion(args.Character)["Name"]
                end
                if v.Value == RegPlr then
                    return false
                end
            end
            return true
        else return true end
    end
    
    local ArrestPL = function(args, savepos, isHidden)
        SavedPositions.ArrestPlr = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
        local Timedout, readytoar = tick() + 6, tick() + CPing()
        LocTP(args.Character:FindFirstChild("HumanoidRootPart").CFrame)
        repeat task.wait()
            local potangina = args.Character and args.Character:FindFirstChild("Humanoid").Health == 0
            local gago = args.TeamColor == BrickColor.new("Bright blue") or args.TeamColor == BrickColor.new("Medium stone grey")
            local hayop = args.TeamColor ~= BrickColor.new("Really red") and not GetIllegalReg(args)
            if potangina or gago or hayop then
                break
            end;if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid").Sit then
                LAction("unsit")
            end;if isHidden or Settings.User.HiddenArrest then
                LocTP(args.Character:FindFirstChild("Head").CFrame * CFrame.new(0, -12, -1))
            else
                LocTP(args.Character:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 0, -1))
            end;if tick() - readytoar >=0 then
                task.spawn(ArrestEve, args)
            end
        until args.Character:FindFirstChild("Head"):FindFirstChild("handcuffedGui") or tick() - Timedout >= 0; Timedout = nil
        if savepos then
            if LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit then
                LAction("unsit", true)
            end;LocTP(SavedPositions.ArrestPlr)
        end
    end
    
    local ArrestEve = function(args, repeated, interval)
        if repeated then
            for i = 1, repeated do
                if interval then task.wait(interval) end
                task.spawn(function()
                    if args.Character:FindFirstChild("Humanoid") and args.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 then
                        workspace.Remote.arrest:InvokeServer(args.Character:FindFirstChildWhichIsA("Part"))
                    end
                end)
            end
        else
            workspace.Remote.arrest:InvokeServer(args.Character:FindFirstChildWhichIsA("Part"))
        end
    end
    
    local VirtualPunch = function(args)
        task.delay(0, function()
            if not (LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")) then
                return
            end;for _, animationTrack in ipairs(LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):FindFirstChildOfClass("Animator"):GetPlayingAnimationTracks()) do
                if animationTrack.Animation.AnimationId == "rbxassetid://484200742" or animationTrack.Animation.AnimationId == "rbxassetid://484926359" then
                    animationTrack:Stop(); animationTrack:Destroy()
                end
            end
            local Sapakan = math.random(1, 2);local animtoload = nil;local newAnim = Instance.new("Animation")
            if Sapakan == 1 then
                newAnim.AnimationId="rbxassetid://484200742";animtoload=LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):FindFirstChildOfClass("Animator"):LoadAnimation(newAnim)
            else
                newAnim.AnimationId="rbxassetid://484926359";animtoload=LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):FindFirstChildOfClass("Animator"):LoadAnimation(newAnim)
            end;animtoload.Looped=false;animtoload:Play(); task.wait(animtoload.Length); newAnim:Destroy();animtoload:Stop();animtoload:Destroy();newAnim=nil;animtoload=nil;Sapakan=nil
        end)
        local LHead = LocalPlayer.Character:FindFirstChild("Head")
        local magnit = Toggles.PunchAura and 20 or 2.5
        if not args then
            for i,v in pairs(Players:GetPlayers()) do
                if v ~= LocalPlayer then
                    local VChar = v.Character
                    local VHead = VChar:FindFirstChild("Head")
                    if VHead and LHead then
                        if (LHead.Position-VHead.Position).Magnitude <= magnit then
                            local sound = VHead.punchSound; sound.Volume = 1; sound:Play()
                            if Toggles.Onepunch then
                                for i = 1, 15 do
                                    MeleEve(v)
                                end
                            else
                                MeleEve(v)
                            end; game:GetService("ReplicatedStorage").SoundEvent:FireServer(sound)
                            if not Toggles.PunchAura then
                                break
                            end
                        end
                    end
                end
            end
        elseif args then
            local AChar = args.Character
            local AHead = AChar:FindFirstChild("Head")
            if (LHead.Position-AHead.Position).Magnitude <= magnit then
                local sound = AHead.punchSound; sound.Volume = 1; sound:Play()
                if Toggles.Onepunch then
                    for i = 1, 15 do
                        MeleEve(args)
                    end
                else
                    MeleEve(args)
                end; game:GetService("ReplicatedStorage").SoundEvent:FireServer(sound)
            end
        end
        if States.LoudPunch then
            for i,v in pairs(Players:GetPlayers()) do
                if v and v.Character and v.Character:FindFirstChild("Head") then
                    local head = v.Character:FindFirstChild("Head")
                    local vol = head.punchSound
                    if v == LocalPlayer then
                        vol:Play()
                    end; Rstorage.SoundEvent:FireServer(vol)
                end
            end
        end
    end
    
    local TasePL = function(plr, args)
        local oldteam = nil
        if not (LocalPlayer.TeamColor == BrickColor.new("Bright blue")) then
            oldteam = LocalPlayer.TeamColor
            TeamTo("guard")
            task.wait()
        end
        local Taser = LocalPlayer.Backpack:FindFirstChild("Taser") or LocalPlayer.Character:FindFirstChild("Taser")
        local ShootEvents = {};
        if args == "teams" then
            for _, tea in pairs(plr:GetPlayers()) do
                if (not (tea == LocalPlayer) and not (tea.TeamColor == BrickColor.new("Bright blue"))) and tea.Character and tea.Character:FindFirstChild("Humanoid") and not (tea.Character:FindFirstChild("Humanoid").Health == 0) then
                    ShootEvents[#ShootEvents + 1] = {
                        Hit = tea.Character:FindFirstChildOfClass("Part");
                        Cframe = CFrame.new();
                        RayObject = Ray.new(Vector3.new(), Vector3.new());
                        Distance = 0;
                    };
                end
            end
        elseif args == "tables" then
            for i,v in next, plr do
                if not (v == LocalPlayer) and v.Character and v.Character:FindFirstChild("Humanoid") and not (v.Character:FindFirstChild("Humanoid").Health == 0) then
                    ShootEvents[#ShootEvents + 1] = {
                        Hit = v.Character:FindFirstChildOfClass("Part");
                        Cframe = CFrame.new();
                        RayObject = Ray.new(Vector3.new(), Vector3.new());
                        Distance = 0;
                    };
                end
            end
        else
            if plr and plr.Character and plr.Character:FindFirstChild("Humanoid") and not (plr.Character:FindFirstChild("Humanoid").Health == 0) then
                ShootEvents[#ShootEvents + 1] = {
                    Hit = plr.Character:FindFirstChildOfClass("Part");
                    Cframe = CFrame.new();
                    RayObject = Ray.new(Vector3.new(), Vector3.new());
                    Distance = 0;
                };
            end
        end
        Rstorage.ShootEvent:FireServer(ShootEvents, Taser)
        Rstorage.ReloadEvent:FireServer(Taser)
        task.wait()
        if oldteam then
            if oldteam == BrickColor.new("Really red") then
                TeamTo("criminal")
            else
                TeamTo("inmate")
            end
        end
    end
    
    local FlingPlr = function()
    
    end
    
    local PunchKill = function(args, speed)
        local Interval = speed or 0.3
        local lastpos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
        while task.wait(Interval) do
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") and LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit then
                LAction("unsit")
            end
            if (not Players:FindFirstChild(args.Name) or not args.Character) or args.Character:FindFirstChild("Humanoid").Health == 0 or args.TeamColor == BrickColor.new("Medium stone grey") then
                break
            end
            LocTP(args.Character:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 0, 1.5))
            VirtualPunch(args)
        end
        LocTP(lastpos)
    end
    
    local BringCar = function(args, usedcar, policecar)
        local Car = nil; local CarButton = workspace.Prison_ITEMS.buttons["Car Spawner"]["Car Spawner"]
        if policecar then
            CarButton = workspace.Prison_ITEMS.buttons:GetChildren()[4]["Car Spawner"]
        end; local ButtonPivot = CarButton:GetPivot()
        local LastPos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame; States.IsBringing = true
        if usedcar then
            for i,v in pairs(workspace.CarContainer:GetChildren()) do
                if v:IsA("Model") and v:FindFirstChild("Body") and v.Body:FindFirstChild("VehicleSeat") and not v.Body.VehicleSeat.Occupant then
                    for ii,vv in pairs(v.Body:GetChildren()) do
                        if vv:IsA("Seat") and not vv.Occupant then
                            Car = v
                            break
                        end
                    end; if Car then
                        break
                    end
                end
            end; if not Car then
                Notif("No Cars Found", nil, 5)
                return
            end
        else
            task.spawn(function()
                Car = game:GetService("Workspace").CarContainer.ChildAdded:Wait()
            end); repeat task.wait()
                task.spawn(function()
                    LAction("unsit"); LocTP(ButtonPivot); workspace.Remote.ItemHandler:InvokeServer(CarButton)
                end)
            until Car
        end; repeat task.wait() until Car:FindFirstChild("RWD") and Car:FindFirstChild("Body") and Car:FindFirstChild("Body"):FindFirstChild("VehicleSeat")
        local Stopped, timeout = false, tick()
        while not Stopped do task.wait()
            pcall(function()
                LocTP(CFrame.new(Car.Body.VehicleSeat.Position))
                Car.Body.VehicleSeat:Sit(LocalPlayer.Character:FindFirstChild("Humanoid"))
                Stopped = LocalPlayer.Character:FindFirstChild("Humanoid").Sit or tick() - timeout > 6
            end)
        end; Car.PrimaryPart = Car:WaitForChild("RWD")
        if args then
            local destiny = args == LocalPlayer and LastPos or args.Character:FindFirstChild("Head").CFrame
            Car:SetPrimaryPartCFrame(destiny)
            wait(.2); LAction("unsit", true); LocTP(LastPos)
        else
            Car:SetPrimaryPartCFrame(LastPos)
        end; States.IsBringing = false; Stopped = nil
        return Car
    end
    
    local TableKill = function(tables)
        local AK = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
        if not AK then
            Gun("AK-47")
            task.wait()
        end
        local inteam = nil
        local crimteam = nil
        local sameteam = nil
        local sameinmate = nil
        local sameguard = nil
        local samecrim = nil
        local ShootEvents = {};
        for i,v in next, tables do
            if v.Character and not v.Character:FindFirstChildWhichIsA("ForceField") and not (v.Character:FindFirstChild("Humanoid").Health == 0) then
                if not Saved.KillDebounce[v.Name] then
                    Saved.KillDebounce[v.Name] = true
                    if v.TeamColor == LocalPlayer.TeamColor then
                        sameteam = true
                        if LocalPlayer.TeamColor == BrickColor.new("Bright orange") then
                            sameinmate = true
                        elseif LocalPlayer.TeamColor == BrickColor.new("Bright blue") then
                            sameguard = true
                        elseif LocalPlayer.TeamColor == BrickColor.new("Really red") then
                            samecrim = true
                        end
                    end
                    if v.TeamColor == BrickColor.new("Bright orange") then
                        inteam = true
                    elseif v.TeamColor == BrickColor.new("Really red") then
                        crimteam = true
                    end
                    delay(1.2, function()
                        Saved.KillDebounce[v.Name] = nil
                    end)
                    for i = 1, 10 do
                        ShootEvents[#ShootEvents + 1] = {
                            Hit = v.Character:FindFirstChildOfClass("Part");
                            Cframe = CFrame.new();
                            RayObject = Ray.new(Vector3.new(), Vector3.new());
                            Distance = 0;
                        }
                    end
                end
            end
        end
        if not ShootEvents[1] then
            return
        end
        AK = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
        task.spawn(function()
            for i = 1, 10 do
                Rstorage.ReloadEvent:FireServer(AK)
                task.wait(.1)
            end
        end)
        if sameteam then
            if ((samecrim or sameguard) and inteam) or (sameinmate and crimteam) then
                SavedPositions.AutoRe = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
                SaveCamPos()
                TeamEve("Medium stone grey")
                Rstorage.ShootEvent:FireServer(ShootEvents, AK)
                task.wait(0.06)
                TeamEve("Bright orange")
            elseif (samecrim or sameguard) and not inteam then
                SavedPositions.AutoRe = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
                SaveCamPos()
                TeamEve("Bright orange")
                Rstorage.ShootEvent:FireServer(ShootEvents, AK)
                task.wait(0.05)
            elseif sameinmate and not crimteam then
                TeamTo("criminal")
                Rstorage.ShootEvent:FireServer(ShootEvents, AK)
            end
        else
            Rstorage.ShootEvent:FireServer(ShootEvents, AK)
        end
    end
    
    local BringPL = function(BringFrom, Destination, isCFrame, donotusecar, dontbreakyet)
        if BringFrom.TeamColor == BrickColor.new("Medium stone grey") or not (BringFrom.Character and BringFrom.Character:FindFirstChildOfClass("Humanoid") and BringFrom.Character:FindFirstChildOfClass("Humanoid").Health ~= 0) then
    
            return
        end; if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid").Sit then LAction("unsit", true); end
        local Car = nil; local CarButton = workspace.Prison_ITEMS.buttons["Car Spawner"]["Car Spawner"]; local ButtonPivot = CarButton:GetPivot()
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local LastPos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
            if not (BringFrom == LocalPlayer) then
                repeat task.wait()
                    for i,v in pairs(workspace.CarContainer:GetChildren()) do
                        if v:IsA("Model") and v:FindFirstChild("Body") and v.Body:FindFirstChild("VehicleSeat") and v.Name ~= "DONOTUSECAR" and not v.Body.VehicleSeat.Occupant then
                            for ii,vv in pairs(v.Body:GetChildren()) do
                                if vv:IsA("Seat") and not vv.Occupant then
                                    Car = v
                                    break
                                end
                            end
                            if Car then
                                break
                            end
                        end
                    end
                    if not Car then
                        coroutine.wrap(function()
                            LocTP(ButtonPivot)
                            workspace.Remote.ItemHandler:InvokeServer(CarButton)
                        end)()
                    end
                until Car
                if donotusecar then Car.Name = "DONOTUSECAR"; end
                if Car and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and BringFrom.Character and BringFrom.Character:FindFirstChild("Torso") and BringFrom.Character:FindFirstChildOfClass("Humanoid") then
                    repeat task.wait() until Car:FindFirstChild("RWD") and Car:FindFirstChild("Body") and Car:FindFirstChild("Body"):FindFirstChild("VehicleSeat"); States.IsBringing = true
                    local seattimeout = tick() + 8
                    local LHuman, LRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid"), LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                    repeat task.wait()
                        LHuman = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid"); LRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                        if LHuman and LRoot then
                            LRoot.CFrame = CFrame.new(Car.Body.VehicleSeat.Position); Car.Body.VehicleSeat:Sit(LHuman)
                        end
                    until LHuman.Sit or tick() - seattimeout >=0; seattimeout = nil
                    if not LHuman or not LHuman.Sit then
                        LAction("unsit", true)
                        States.IsBringing = false; LocTP(LastPos); Car.Name = "DONOTUSECAR"
                        return
                    end; if BringFrom.TeamColor == BrickColor.new("Medium stone grey") then
    
                        LAction("unsit", true)
                        States.IsBringing = false; LocTP(LastPos)
                        return
                    end
                    local TargetSeat = nil
                    for i,v in pairs(Car.Body:GetChildren()) do
                        if v:IsA("Seat") and not v.Occupant then
                            TargetSeat = v
                            break
                        end
                    end; if not TargetSeat then
                        LocTP(LastPos)
                        return
                    end
                    local VChar = BringFrom.Character
                    local VHuman = VChar and VChar:FindFirstChildOfClass("Humanoid")
                    local VRoot = VChar and VChar:FindFirstChild("HumanoidRootPart")
                    local Timeout = tick() + 17
                    local CarSpin, SpinRad = false, 0
                    task.spawn(function()
                        Car.PrimaryPart = TargetSeat; Car:SetPrimaryPartCFrame(VRoot.CFrame * CFrame.new(0, -0.3, 0))
                        task.wait(4); CarSpin = true
                    end)
                    repeat 
                        task.wait()
                        local step1 = CPing() / 2 / 2 / 2
                        if TargetSeat.Occupant and not VHuman.Sit then
                            for i,v in pairs(Car.Body:GetChildren()) do
                                if v:IsA("Seat") and not v.Occupant then
                                    TargetSeat = v
                                    break
                                end
                            end
                        end
                        Car.PrimaryPart = TargetSeat
                        local Movement = Vector3.new(VRoot.Velocity.X, 0, VRoot.Velocity.Z)
                        local Predict = (VRoot.CFrame - (Vector3.new(0, 0, -0.1) * step1)) + (Movement * (step1 * 28))
                        if Predict.Position.Y > 1 then
                            if CarSpin then
                                SpinRad += 30
                                Car:SetPrimaryPartCFrame(Predict * CFrame.Angles(0, math.rad(SpinRad), 0))
                            else
                                Car:SetPrimaryPartCFrame(Predict)
                            end
                        else
                            Car:SetPrimaryPartCFrame(LastPos)
                        end
                        if BringFrom.TeamColor == BrickColor.new("Medium stone grey") then
                            break
                        end
                    until not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChildOfClass("Humanoid") or not BringFrom.Character or not LHuman.Sit or VChar ~= BringFrom.Character or VHuman.Sit or VHuman.Health == 0 or tick() - Timeout >=0
                    Timeout = nil
                    if VHuman and not VHuman.Sit then
    
                        LAction("unsit", true); LocTP(LastPos); States.IsBringing = false
                        return
                    end
                    if isCFrame then
                        Car.PrimaryPart = Car:FindFirstChild("RWD"); Car:SetPrimaryPartCFrame(Destination)
                    else
                        Car.PrimaryPart = Car:FindFirstChild("RWD")
                        local Destiny = Destination ~= LocalPlayer and Destination.Character:FindFirstChild("HumanoidRootPart").CFrame or LastPos
                        Car:SetPrimaryPartCFrame(Destiny)
                        if Destination ~= LocalPlayer and (donotusecar or not Settings.User.AutoDumpCar) then
                            wait(.2); LAction("unsit", true); LocTP(LastPos)
                        end
                    end; SavedArgs.BringSuccess = true
                    if Settings.User.AutoDumpCar and not donotusecar and not dontbreakyet then
                        local Tinedout = tick() + 15
                        repeat task.wait() until VHuman.Health == 0 or not VHuman.Sit or tick() - Tinedout >=0 or not Players:FindFirstChild(BringFrom and BringFrom.Name or "nil"); Tinedout = nil
                        if not LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit then
                            LastPos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
                            repeat task.wait()
                                Car.Body.VehicleSeat:Sit(LocalPlayer.Character:FindFirstChildOfClass("Humanoid"))
                            until LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit
                        end
                        Car.PrimaryPart = Car:FindFirstChild("RWD"); Car:SetPrimaryPartCFrame(CFrame.new(0, 9, 0)); wait(.2)
                        LAction("unsit", true); LocTP(LastPos)
                    end; States.IsBringing = false
                end
            else
                if isCFrame then
                    LocTP(Destination)
                else
                    LocTP(Destination.Character:FindFirstChild("HumanoidRootPart").CFrame)
                end
            end
        end
    end
    
    local OpenDoors = function(includeGate)
        local oldteam = nil
        if #Teams.Guards:GetPlayers() >= 8 and not (LocalPlayer.TeamColor == BrickColor.new("Bright blue")) then
    
            return
        elseif not (LocalPlayer.TeamColor == BrickColor.new("Bright blue")) then
            oldteam = LocalPlayer.TeamColor; SaveCamPos(); TeamTo("guard"); waitfor(LocalPlayer.Character, "HumanoidRootPart", 3)
        end; if includeGate then
            local laspos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
            local gate = game:GetService("Workspace")["Prison_ITEMS"].buttons["Prison Gate"]["Prison Gate"]
            for i = 1, 4 do
                LocTP(gate:GetPivot())
                workspace.Remote.ItemHandler:InvokeServer(gate)
            end; LocTP(laspos)
        end; local hascollision = {}
        for i,v in pairs(workspace.Doors:GetChildren()) do
            if v:IsA("Model") then
                local pivot = v:GetPivot(); v:PivotTo(LocalPlayer.Character:GetPivot())
                for _,vv in pairs(v:GetDescendants()) do
                    if vv:IsA("BasePart") and vv.CanCollide then
                        hascollision[vv] = true; vv.CanCollide = false
                    end
                end; task.delay(0, function()
                    v:PivotTo(pivot)
                    for _,vv in pairs(v:GetDescendants()) do
                        if vv:IsA("BasePart") and hascollision[vv] then
                            vv.CanCollide = true
                        end
                    end
                end)
            end
        end; RTPing(0.03)
        if oldteam then
            wait(2); SaveCamPos()
            if oldteam == BrickColor.new("Really red") then
                TeamTo("criminal")
            elseif oldteam == BrickColor.new("Bright orange") then
                TeamTo("inmate")
            end
        end
    end
    
    local FlingPL = function(args)
        local tempos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
        for _,v in next, LocalPlayer.Character:GetChildren() do
            if v:IsA("BasePart") then
                v.CanCollide = false
                v.Massless = true
            end
        end
        local tempo = args.Character:FindFirstChild("HumanoidRootPart").CFrame; LocTP(tempo)
        local val = Toggles.Noclip; Toggles.Noclip = true
        local tempcon = Stepped:Connect(function(step)
            step = step - game.Workspace.DistributedGameTime
            local aRoot, lRoot = args.Character and args.Character:FindFirstChild("HumanoidRootPart"), LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if aRoot and lRoot then
                tempo = aRoot.CFrame + (aRoot.Velocity * (step * 28))
                if tempo.Position.Y > 1 then
                    lRoot.CFrame = tempo
                end
            end
        end); task.delay(0.35, function()
            if args.Character and args.Character:FindFirstChild("Head") and args.Character.Head.Position.Y < 699 then
                VKeyPress("C", "Press")
            end
        end); task.delay(0.05, function()
            LocalPlayer.Character.PrimaryPart.Velocity = Vector3.new(0, 131111, 0)
        end)
        local timeout = tick() + 10
        repeat task.wait()
            local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if root then
                root.CFrame = tempo.Position.Y > 1 and tempo or CFrame.new(0, 100, 0)
                if root.Velocity.Y < 6999 then
                    root.Velocity = Vector3.new(0, 1e6, 0)
                end
            end
            local human = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if human and human.Sit then
                human.Sit = false
            end
            if not Players:FindFirstChild(args.Name) then
                break
            end
        until tick() - timeout >=0 or (args.Character and args.Character:FindFirstChild("Head") and (args.Character.Head.Position.Y > 699 or args.Character.Head.Position.Y < 1))
        tempcon:Disconnect(); tempcon = nil; timeout = nil; Toggles.Noclip = val
        local tick1 = tick() + 2
        local seat = game:GetService("Workspace"):FindFirstChildWhichIsA("Seat", true)
        local LHuman = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if seat.Occupant and not LHuman.Sit then
            for i,v in next, workspace:GetDescendants() do
                if v:IsA("Seat") and not v.Occupant then
                    seat = v; break
                end
            end
        end
        repeat
            LHuman = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if LHuman and seat then
                seat:Sit(LHuman)
            end
            if LocalPlayer.Character.PrimaryPart then LocalPlayer.Character.PrimaryPart.Velocity = Vector3.new(0, 0, 0) end
            task.wait()
        until LHuman.Sit or tick() - tick1 >=0; task.wait()
        for i = 1, 9 do
            Stepped:Wait()
            LHuman.Sit = false; LocalPlayer.Character.PrimaryPart.Velocity = Vector3.new(0, 0, 0); LocTP(tempos)
        end; Hbeat:Wait(); LHuman.Sit = false; LocTP(tempos)
        tempos = nil; tick1 = nil; LHuman = nil
    end
    
    local CarFlingPL = function(args)
        local tempos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
        BringPL(args, args.Character:FindFirstChild("HumanoidRootPart").CFrame, true, true)
        local char = LocalPlayer.Character
        local bv, bg = Instance.new("BodyVelocity", char.HumanoidRootPart), Instance.new("BodyGyro", char.HumanoidRootPart)
        for i = 1, 10 do
            bv.MaxForce = Vector3.new(9e9, 9e9, 9e9); bg.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
            bg.CFrame = bg.CFrame * CFrame.new(math.random(69, 699999), math.random(69, 6966868), math.random(6996, 66886)); bv.Velocity = Vector3.new(math.random(69, 699), 1e6, math.random(69, 699))
            Stepped:Wait()
        end; Stepped:Wait(); Hbeat:Wait()
        Tasks.Refresh(nil, tempos)
    end
    
    local MeleeKill = function(args, savepos, isHidden)
        if savepos then
            SavedPositions.MeleeKill = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
        end
        local LHead, VHead = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Head"), args.Character and args.Character:FindFirstChild("Head")
        local VHuman, VRoot = args.Character and args.Character:FindFirstChildOfClass("Humanoid"), args.Character and args.Character:FindFirstChild("HumanoidRootPart")
        if LHead and VHead and VHuman and VHuman.Health ~= 0 then
            LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit = false
            if not (isHidden or Settings.User.HiddenMelee) then
                if VRoot and not Saved.MKillDebounce[args.Name] then
                    local daping = CPing(); LocTP(VRoot.CFrame); Saved.MKillDebounce[args.Name] = true
                    task.spawn(function()
                        RTPing(daping*2); Saved.MKillDebounce[args.Name] = nil
                    end); Rstep:Wait(); LocTP(VRoot.CFrame); wait()
                    for i = 1, 10 do MeleEve(args); end
                    wait(0.030); LocTP(VRoot.CFrame)
                    for i = 1, 10 do MeleEve(args); end
                    wait(0.030); LocTP(VRoot.CFrame)
                    for i = 1, 10 do MeleEve(args); end
                    Rstep:Wait(); LocTP(VRoot.CFrame)
                    for i = 1, 10 do MeleEve(args); end
                end; wait()
            else
                local timeout = tick() + 6
                repeat task.wait()
                    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") and LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit then
                        LAction("unsit")
                    end; if args.Character and args.Character:FindFirstChildOfClass("Humanoid") and not args.Character:FindFirstChild("ForceField") then
                        if args.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 then
                            if args.Character:FindFirstChild("Humanoid").Sit then
                                LocTP(VHead.CFrame * CFrame.new(0, -8, 0))
                            else LocTP(VHead.CFrame * CFrame.new(0, -12, 0)); end
                        else break; end
                    else
                        break
                    end; for i = 1, 10 do
                        MeleEve(args)
                    end
                until tick() - timeout >=0
            end
        end; if savepos then
            LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit = false; LocTP(SavedPositions.MeleeKill)
        end
    end
    
    local MakeCrim = function(args, savepos, tpback, ArrestLater)
        if args.TeamColor == BrickColor.new("Really red") then
        else
            if args == LocalPlayer then 
                TeamTo("criminal") 
                return 
            end; SavedPositions.MakeCrimPos = savepos and LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame or nil; SavedPositions.MakeCrimPlr = args.Character:FindFirstChild("HumanoidRootPart").CFrame
            local timeout = tick() + 10
            repeat
                BringPL(args, CFrame.new(-920.947937, 92.3143158, 2138.05615, 0.997869313, 4.71007233e-08, 0.0652444065, -4.59519711e-08, 1, -1.91075955e-08, -0.0652444065, 1.6068773e-08, 0.997869313), true, nil, true)
                RTPing(0);RTPing(0)
            until args.TeamColor == BrickColor.new("Really red") or tick() - timeout >= 0; timeout = nil
            if ArrestLater then
                ArrestPL(args)
            end;if tpback then
                BringPL(args, SavedPositions.MakeCrimPlr, true); wait(.2)
            end;if savepos then
                if LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit then
                    LAction("unsit", true)
                end;LocTP(SavedPositions.MakeCrimPos)
            end
        end
    end
    
    Tasks = {
        ReloadGun = function(arg, arg2)
            if not arg then
                return
            end
            task.spawn(function()
                local tool = arg.Name
                while wait() do
                    local findchild = LocalPlayer.Character:FindFirstChild(tool) or LocalPlayer.Backpack:FindFirstChild(tool)
                    if findchild then
                        if LocalPlayer.Character:FindFirstChild(tool) then
                            Rstorage.ReloadEvent:FireServer(findchild)
                        elseif arg2 then break end
                    else break end
                end
            end)
        end;
    };
    
    local Commands = {
        Noclip = {
            Display = "Noclip";
            Execute = function()
                Toggles.Noclip = true;
            end,
        };
        DisableNoclip = {
            Display = "Clip";
            Execute = function()
                Toggles.Noclip = false;
            end,
        };
        Guns = {
            Display = "Get Guns";
            Execute = function()
                AllGuns()
            end,
        };
        AutoGuns = {
            Display = "Auto Guns";
            Execute = function()
                Toggles.AutoGuns = true;
            end,
        };
        SpawnCar = {
            Display = "Spawn Car";
            Execute = function()
                BringCar()
            end,
        };
        DestroyDoors = {
            Display = "Destroy Doors";
            Execute = function()
                workspace.Doors.Parent = Rstorage;
            end,
        };
        RestoreDoors = {
            Display = "Restore Doors";
            Execute = function()
                Rstorage.Doors.Parent = workspace
            end,
        };
        KillAll = {
            Display = "Kill All";
            Execute = function()
                MultiKill(Players)
            end,
        };
        KillGuards = {
            Display = "Kill Guards";
            Execute = function()
                MultiKill(Teams.Guards)
            end,
        };
        KillInmates = {
            Display = "Kill Inmates";
            Execute = function()
                MultiKill(Teams.Inmates)
            end,
        };
        KillCrims = {
            Display = "Kill Criminals";
            Execute = function()
                MultiKill(Teams.Criminals)
            end,
        };
        LoopKillAll = {
            Display = "Loopkill All";
            Execute = function()
                Loops.KillTeams.All = true;
            end,
        };
        UnLoopKillAll = {
            Display = "Unloopkill All";
            Execute = function()
                Loops.KillTeams.All = false;
            end,
        };
        FEKatana = {
            Display = "FE Katana";
            Execute = function()
                local katana = Instance.new("Tool")
                katana.Grip = CFrame.fromMatrix(Vector3.new(0, 0, -1.5), Vector3.new(0, 1, 0), Vector3.new(0, 0, 1), Vector3.new(1, 0, 0))
                katana.GripForward = Vector3.new(-1, -0, -0)
                katana.GripPos = Vector3.new(0, 0, -1.5)
                katana.GripRight = Vector3.new(0, 1, 0)
                katana.GripUp = Vector3.new(0, 0, 1)
                katana.TextureId = "rbxasset://Textures/Sword128.png"
                katana.WorldPivot = CFrame.fromMatrix(Vector3.new(-185.24185180664062, -82.7358169555664, 318.0477294921875), Vector3.new(0.09104403853416443, 0.5370116829872131, -0.8386485576629639), Vector3.new(-0.8810994625091553, 0.43589484691619873, 0.18346372246742249), Vector3.new(0.46408435702323914, 0.7222291231155396, 0.5128455758094788))
                katana.Name = "Katana"
                katana.Parent = game.Players.LocalPlayer.Backpack
    
                local handle = Instance.new("Part")
                handle.BottomSurface = Enum.SurfaceType.Smooth
                handle.BrickColor = BrickColor.new(0.38823533058166504, 0.37254902720451355, 0.38431376218795776)
                handle.CFrame = CFrame.fromMatrix(Vector3.new(-85.3121337890625, 11.887321472167969, 78.60133361816406), Vector3.new(0.09104403853416443, 0.5370116829872131, -0.8386485576629639), Vector3.new(-0.8810994625091553, 0.43589484691619873, 0.18346372246742249), Vector3.new(0.46408435702323914, 0.7222291231155396, 0.5128455758094788))
                handle.Color = Color3.new(0.388235, 0.372549, 0.384314)
                handle.Orientation = Vector3.new(-46.23899841308594, 42.143001556396484, 50.933998107910156)
                handle.Reflectance = 0.4000000059604645
                handle.Rotation = Vector3.new(-54.62200164794922, 27.650999069213867, 84.10099792480469)
                handle.Size = Vector3.new(1, 0.800000011920929, 4)
                handle.TopSurface = Enum.SurfaceType.Smooth
                handle.Name = "Handle"
                handle.Parent = katana
    
                local mesh = Instance.new("SpecialMesh")
                mesh.MeshType = Enum.MeshType.FileMesh
                mesh.MeshId = "http://www.roblox.com/asset/?id=11442510"
                mesh.TextureId = "http://www.roblox.com/asset/?id=11442524"
                mesh.Scale = Vector3.new(1.7000000476837158, 1.7000000476837158, 1.7000000476837158)
                mesh.Parent = handle
    
                local slash = Instance.new("Sound")
                slash.RollOffMode = Enum.RollOffMode.InverseTapered
                slash.SoundId = "rbxassetid://7118966167"
                slash.Name = "Slash"
                slash.Parent = katana
    
                local slash_anim = Instance.new("Animation")
                slash_anim.AnimationId = "rbxassetid://218504594"
                slash_anim.Name = "SlashAnim"
                slash_anim.Parent = katana
    
                katana.Activated:Connect(function()local a=game.Players.LocalPlayer local b="74894663"local c=Instance.new("Animation")c.AnimationId="rbxassetid://218504594"..b local a=a.Character.Humanoid:LoadAnimation(c)a:Play()a:AdjustSpeed(2)local c=Instance.new("Sound")c.Parent=handle c.MaxDistance=math.huge c.SoundId="rbxassetid://88633606"c.Volume=2 wait()c:Play()for a,b in pairs(game.Players:GetChildren())do if b.Name~=game.Players.LocalPlayer.Name then for a=1,10 do game.ReplicatedStorage.meleeEvent:FireServer(b)c:Destroy()end end end end)
    
    
                katana.Activated:Connect(function()
                    local AnimTrack = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(slash_anim)
                    AnimTrack:Play()
                    slash:Play()
                end)
            end,
        };
        SuperSpeed = {
            Display = "Super Speed";
            Execute = function()
                repeat task.wait() until LocalPlayer.Character
                local Char = LocalPlayer.Character
                Char.Humanoid.WalkSpeed = 40
            end,
        };
        BringAll = {
            Display = "Bring All";
            Execute = function()
                for i,v in pairs(Players:GetPlayers()) do
                    if v ~= LocalPlayer then
                        BringPL(v)
                    end
                end
            end,
        };
        BecomeCop = {
            Display = "Become Guard";
            Execute = function()
                TeamTo("guard")
            end,
        };
        BecomeCrim = {
            Display = "Become Criminal";
            Execute = function()
                TeamTo("criminal")
            end,
        };
        BecomeInmate = {
            Display = "Become Inmate";
            Execute = function()
                TeamTo("inmate")
            end,
        };
        KeyCard = {
            Display = "Give Keycard";
            Execute = function()
                GiveKeyCard(LocalPlayer)
            end,
        };
        FlingAll = {
            Display = "Fling All";
            Execute = function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/CorgiSideExploits/OrionLib/refs/heads/main/SkidFling", true))()
            end,
        };
        HighJump = {
            Display = "High Jump";
            Execute = function()
                repeat task.wait() until LocalPlayer.Character
                local Char = LocalPlayer.Character
                Char.Humanoid.JumpPower = 80
            end,
        };
        CrimBase = {
            Display = "Teleport to Criminal Base";
            Execute = function()
                repeat task.wait() until LocalPlayer.Character
                local Char = LocalPlayer.Character
                Char.HumanoidRootPart.CFrame = Teleports.crimbase
            end,
        };
        Nexus = {
            Display = "Teleport to Nexus";
            Execute = function()
                repeat task.wait() until LocalPlayer.Character
                local Char = LocalPlayer.Character
                Char.HumanoidRootPart.CFrame = Teleports.nexus
            end,
        };
        Neighbourhood = {
            Display = "Teleport to Neighbourhood";
            Execute = function()
                repeat task.wait() until LocalPlayer.Character
                local Char = LocalPlayer.Character
                Char.HumanoidRootPart.CFrame = Teleports.neighborhood
            end,
        };
        Yard = {
            Display = "Teleport to Yard";
            Execute = function()
                repeat task.wait() until LocalPlayer.Character
                local Char = LocalPlayer.Character
                Char.HumanoidRootPart.CFrame = Teleports.yard
            end,
        };
        KillAura = {
            Display = "Kill Aura";
            Execute = function()
                Toggles.MeleeAura = true;
            end,
        };
        UnKillAura = {
            Display = "Unkill Aura";
            Execute = function()
                Toggles.MeleeAura = false;
            end,
        };
        
    }
    
    local LoadCommands = function()
        for _, x in pairs(Commands) do -- x stands for each command inside of the Commands table.
            if x.Display and x.Execute then
                local y = RButton:Clone()
                y.Name = x.Display;
                y.Text = x.Display;
                y.Parent = MainScroll;
                y.Visible = true
    
                y.Activated:Connect(function()
                    x.Execute()
                end)
            else
                Notif("Invalid Command: " .. x, nil, 4)
            end
        end
    end
    
    local SetupGUI = function()
        RButton.Visible = false;
        MainFrame.Draggable = true
        LoadCommands()
        if PlUI:FindFirstChild(UI.Name) then
            Notif("Corgiside Exploits", "Script is Already Loaded, Deleting Previous GUI.", 5)
            if PlUI:FindFirstChild(UI.Name) ~= UI then
                PlUI:FindFirstChild(UI.Name):Destroy()
            end
        else
            Notif("Corgiside Exploits", "Script Loaded, Happy Exploiting!", 5)
        end
    end
    
    Close.Activated:Connect(function()
        CloseOpen(MainFrame, false)
    end)
    
    SetupGUI()
    
    task.spawn(function()
        local cliptask = function()
            repeat task.wait() until LocalPlayer.Character
            local Char = LocalPlayer.Character
            for i,v in pairs(Char:GetChildren()) do
                if v:IsA("BasePart") then
                    RStep:Connect(function()
                        if Toggles.Noclip == true then
                            v.CanCollide = false
                        else
                            if v.Name ~= "HumanoidRootPart" and v.Name ~= "Right Leg" and v.Name ~= "Left Leg" then
                                v.CanCollide = true
                            end
                        end
                    end)
                end
            end
        end
        cliptask()
    end)
    task.spawn(function()
        local autoguntask = function()
            Rstep:Connect(function()
                if Toggles.AutoGuns == true then
                    AllGuns()
                end
            end)
        end
        autoguntask()
    end)
    task.spawn(function()
        local loopkillall = function()
            Rstep:Connect(function()
                if Loops.KillTeams.All == true then
                    MultiKill(Players)
                end
            end)
        end
        loopkillall()
    end)
    task.spawn(function()
        local killaura = function()
            for i,v in pairs(Players:GetPlayers()) do
                if v ~= LocalPlayer then
                    Rstep:Connect(function()
                        if Toggles.MeleeAura == true then
                            MeleEve(v)
                        end
                    end)
                end
            end
        end
        killaura()
    end)
end;
task.spawn(C_8);

return G2L["1"], require;